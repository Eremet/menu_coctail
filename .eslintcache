[{"/Users/mac/Desktop/coctail_menu/src/index.js":"1","/Users/mac/Desktop/coctail_menu/src/App.js":"2","/Users/mac/Desktop/coctail_menu/src/reportWebVitals.js":"3","/Users/mac/Desktop/coctail_menu/src/components/Main.js":"4","/Users/mac/Desktop/coctail_menu/src/Screens/DetailScreen.js":"5","/Users/mac/Desktop/coctail_menu/src/Screens/HomeScreen.js":"6","/Users/mac/Desktop/coctail_menu/src/components/Home/SearchBar.js":"7","/Users/mac/Desktop/coctail_menu/src/components/Home/List.js":"8","/Users/mac/Desktop/coctail_menu/src/config/index.js":"9","/Users/mac/Desktop/coctail_menu/src/components/Detail/View.js":"10","/Users/mac/Desktop/coctail_menu/src/Screens/IngridientScreen.js":"11"},{"size":684,"mtime":1608701585577,"results":"12","hashOfConfig":"13"},{"size":148,"mtime":1608743232158,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1608701331100,"results":"15","hashOfConfig":"13"},{"size":538,"mtime":1608706896569,"results":"16","hashOfConfig":"13"},{"size":868,"mtime":1608740685007,"results":"17","hashOfConfig":"13"},{"size":1536,"mtime":1608741082756,"results":"18","hashOfConfig":"13"},{"size":2150,"mtime":1608743088369,"results":"19","hashOfConfig":"13"},{"size":3022,"mtime":1608740441690,"results":"20","hashOfConfig":"13"},{"size":321,"mtime":1608705681381,"results":"21","hashOfConfig":"13"},{"size":1467,"mtime":1608705562983,"results":"22","hashOfConfig":"13"},{"size":1385,"mtime":1608706712446,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"9pxvox",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"/Users/mac/Desktop/coctail_menu/src/index.js",[],["51","52"],"/Users/mac/Desktop/coctail_menu/src/App.js",[],"/Users/mac/Desktop/coctail_menu/src/reportWebVitals.js",[],"/Users/mac/Desktop/coctail_menu/src/components/Main.js",[],"/Users/mac/Desktop/coctail_menu/src/Screens/DetailScreen.js",["53"],"/Users/mac/Desktop/coctail_menu/src/Screens/HomeScreen.js",["54","55"],"import React,{useState, useEffect} from 'react'\nimport SearchBar from '../components/Home/SearchBar'\nimport { COCTAIL_ALL, SEARCH_BY_NAME, FILTER_BY_ALCO } from '../config'\nimport List from '../components/Home/List'\n\nexport default function HomeScreen() {\n    const [data, setData] = useState(null)\n    useEffect(()=>{\n        getAllCoctails()\n    },[])\n\n    const getAllCoctails= async()=>{\n        let resp = await fetch(COCTAIL_ALL)\n        let request = await resp.json()\n        setData(request.drinks)\n    }\n    const getCoctailsByName = async (latter)=>{\n        if(latter.length <= 1 || latter == ''){\n            getAllCoctails()\n        }else{\n            let resp = await fetch(SEARCH_BY_NAME+latter)\n            let request = await resp.json()\n            setData(request.drinks)\n        }  \n    }\n    const filterByAlc = async (fltr) => {\n        if(fltr == 'All'){\n            getAllCoctails()\n        }else{\n            let resp = await fetch(FILTER_BY_ALCO+fltr)\n            let req = resp.json()\n            setData(req.drinks)\n        }\n    }\n    return (\n        <div\n            style={{\n                backgroundColor: 'green'\n            }}>\n            <h1\n            style={{\n                textAlign: 'center',\n                fontSize: '60px'\n            }}\n            >COCTAIL_MENU</h1>\n            <SearchBar\n                getCoctailsByName={getCoctailsByName}\n                filterByAlc={filterByAlc}\n            />\n            <List\n                data={data}\n            />\n        </div>\n    )\n}\n","/Users/mac/Desktop/coctail_menu/src/components/Home/SearchBar.js",[],"/Users/mac/Desktop/coctail_menu/src/components/Home/List.js",["56","57"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    text: {\n       color: 'black',\n       textDecoration: 'none'\n    },\n    cardContent: {\n        backgroundColor: 'grey'\n    },\n    card: {\n        border: '10px solid black',\n        minWidth: 350,\n        borderRadius: '25px',\n    },\n    img: {\n        borderRadius: '25px',\n        maxWidth: 200,\n        border: '5px solid black'\n    }\n  });\n\nexport default function List(props) {\n    const [spacing, setSpacing] = React.useState(2);\n    const classes = useStyles();\n    return (\n        <div>\n            {props.data?\n                props.data.map(el=>{\n                    return(\n                        <div>\n                        <Grid container className={classes.root} spacing={2}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={spacing}>\n                                {[0, 1, 2].map((value) => (\n                                    <Grid key={value} item>\n                                    <Card\n                                    className={classes.card}\n                                    >\n                                    <CardContent\n                                        className={classes.cardContent}\n                                        >\n                                        <Link to={'/detail/'+el.idDrink} key={el.idDrink}>\n                                            <div>\n                                                <Typography>\n                                                    <h3 \n                                                    className={classes.text}\n                                                    >{el.strDrink}</h3>\n                                                </Typography>\n                                                <CardMedia>\n                                                    <img \n                                                    className={classes.img}\n                                                    src={el.strDrinkThumb}/>\n                                                </CardMedia>\n                                            </div>\n                                        </Link>\n                                    </CardContent>\n                                </Card>\n                                    </Grid>\n                                ))}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        </div>\n                    )\n                }) \n                : <h5>Loading...</h5>\n            }\n        </div>\n    )\n}\n","/Users/mac/Desktop/coctail_menu/src/config/index.js",[],"/Users/mac/Desktop/coctail_menu/src/components/Detail/View.js",["58"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function View(props) {\n    return (\n        <div>\n            {props.info &&\n            <div>\n                <img style={{width:'400px'}} src={props.info.strDrinkThumb}/>\n                <h1>{props.info.strDrink}</h1>\n                <br/>\n                <br/>\n                <p>{props.info.strInstructions}</p>\n                <b>ingredients</b>\n                <ul>\n                    <Link to={'/ingredient/' + props.info.strIngredient1}><li>{props.info.strIngredient1}</li></Link>\n                    <Link to={'/ingredient/' + props.info.strIngredient2}><li>{props.info.strIngredient2}</li></Link>\n                    <Link to={'/ingredient/' + props.info.strIngredient3}><li>{props.info.strIngredient3}</li></Link>\n                    <Link to={'/ingredient/' + props.info.strIngredient4}><li>{props.info.strIngredient4}</li></Link>\n                    <Link to={'/ingredient/' + props.info.strIngredient5}><li>{props.info.strIngredient5}</li></Link>\n                </ul>\n                <b>Measure</b>\n                <ul>\n                    <li>{props.info.strMeasure1}</li>\n                    <li>{props.info.strMeasure2}</li>\n                    <li>{props.info.strMeasure3}</li>\n                    <li>{props.info.strMeasure4}</li>\n                    <li>{props.info.strMeasure5}</li>\n                </ul>\n            </div>\n            } \n        </div>\n    )\n}\n","/Users/mac/Desktop/coctail_menu/src/Screens/IngridientScreen.js",["59","60"],"import React, {useEffect, useState} from 'react'\nimport { SEARCH_BY_ING } from '../config'\n\n\nexport default function IngredientScreen(props) {\n    const [ing, setData] = useState(null)\n\n     useEffect(()=>{\n        let param = props.match.params.name\n        getIngredient(param)\n    },[])\n\n    const getIngredient = async(prm) =>{\n        let resp = await fetch(SEARCH_BY_ING+prm)\n        let req = resp.json()\n        setData(req ? req.ingredients[0] : null)\n        console.log(req)\n    }\n    \n    return (\n        <div>\n               <span onClick={\n                    props.history.goBack\n                }>{'<--'}</span>\n                    {ing ? \n                        <div>\n                            <h1>{ing.strIngredient}</h1>\n                            <span>\n                                <input\n                                    type=\"text\"\n                                    defaultChecked={\n                                        ing.strAlcohol == 'Yes' ?\n                                        true : false}\n                                    disabled\n                                >\n                                </input>\n                            </span>\n                            <b><i>{ing.strDescription}</i></b>\n                        </div>\n\n                        :<h1>Result undefined</h1>\n                    }\n        </div>\n    )\n}",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":11,"column":7,"nodeType":"67","endLine":11,"endColumn":9,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":18,"column":41,"nodeType":"71","messageId":"72","endLine":18,"endColumn":43},{"ruleId":"69","severity":1,"message":"70","line":27,"column":17,"nodeType":"71","messageId":"72","endLine":27,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":34,"column":21,"nodeType":"75","messageId":"76","endLine":34,"endColumn":31},{"ruleId":"77","severity":1,"message":"78","line":61,"column":53,"nodeType":"79","endLine":63,"endColumn":77},{"ruleId":"77","severity":1,"message":"78","line":9,"column":17,"nodeType":"79","endLine":9,"endColumn":78},{"ruleId":"65","severity":1,"message":"80","line":11,"column":7,"nodeType":"67","endLine":11,"endColumn":9,"suggestions":"81"},{"ruleId":"69","severity":1,"message":"70","line":32,"column":56,"nodeType":"71","messageId":"72","endLine":32,"endColumn":58},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["84"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'setSpacing' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props.match.params.name'. Either include it or remove the dependency array.",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [props.match.params.id]",{"range":"90","text":"91"},"Update the dependencies array to be: [props.match.params.name]",{"range":"92","text":"93"},[373,375],"[props.match.params.id]",[286,288],"[props.match.params.name]"]